# options for analysis running
run:
  # enables gomod and disable changing of go.mod file
  modules-download-mode: vendor

  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  deadline: 2m

# all available settings of specific linters
linters-settings:
  exclude: vendor # skip vendor folder
  errcheck:
    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;
    check-type-assertions: true
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    check-blank: true
  errorlint:
    errorf: true
  govet:
    # report about shadowed variables
    check-shadowing: true
  gocyclo:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 15
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 200
  unused:
      # treat code as a program (not a library) and report unused exported identifiers; default is false.
      # XXX: if you enable thisconfig setting, unused will report a lot of false-positives in text editors:
      # if it's called for subdconfigir of a project it can't find funcs usages. All text editor integrations
      # with golangci-lint callconfig it on a directory with the changed file.
      check-exported: false
  unparam:
    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    check-exported: true
  nakedret:
    # make an issue if func has more lines of code than this setting and it has naked returns
    max-func-lines: 60
  prealloc:
    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
    simple: true
    range-loops: true # Report preallocation suggestions on range loops
    for-loops: false # Report preallocation suggestions on for loops

linters:
  disable-all: true
  enable:
    - deadcode
    - dupl
    - errcheck
    - errorlint
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - makezero
    - megacheck
    - paralleltest
    - predeclared
    - revive
    - staticcheck
    - structcheck
    - thelper
    - typecheck
    - unconvert
    - unused
    - varcheck
  fast: false

issues:
  # Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: true

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gosec


